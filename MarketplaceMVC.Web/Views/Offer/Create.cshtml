@model MarketplaceMVC.Web.Models.Offer.CreateOfferViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>CreateOfferViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Game, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Game, Model.Games, new { @class = "custom-select" })
                @Html.ValidationMessageFor(model => model.Game, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Header, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Header, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Header, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Discription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Discription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Discription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccountLogin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccountLogin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AccountLogin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.EditorFor(model => model.PersonalAccount, new { htmlAttributes = new { @id = "personal-account" } })
            @Html.ValidationMessageFor(model => model.PersonalAccount, "", new { @class = "text-danger" })
            @Html.LabelFor(model => model.PersonalAccount, htmlAttributes: new { @class = "form-check-label", @for = "personal-account" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CountOfGames, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CountOfGames, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CountOfGames, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedAccountDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedAccountDate, new { htmlAttributes = new { type = "date", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedAccountDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">


            @Html.EditorFor(model => model.IsBanned, new { htmlAttributes = new { @id = "is-banned" } })
            @Html.ValidationMessageFor(model => model.IsBanned, "", new { @class = "text-danger" })
            @Html.LabelFor(model => model.IsBanned, htmlAttributes: new { @class = "form-check-label", @for = "is-banned" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Url, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.EditorFor(model => model.SellerPaysMiddleman, new { htmlAttributes = new { @id = "seller-pays" } })
            @Html.ValidationMessageFor(model => model.SellerPaysMiddleman, "", new { @class = "text-danger" })
            @Html.LabelFor(model => model.SellerPaysMiddleman, htmlAttributes: new { @class = "form-check-label", @for = "seller-pays" })        
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
